{"version":3,"sources":["components/Heading.jsx","InterestedFacilityContext.jsx","components/ResultSection/Heart.jsx","components/ResultSection/FacilityCardInfo.jsx","components/ResultSection/FacilityCardBase.jsx","components/ResultSection/FullHours.jsx","OpenFacilityContext.jsx","components/ResultSection/FacilityCard.jsx","DisplayedFacilityContext.jsx","components/ResultSection/ResultPanel.jsx","components/SearchSection/SearchBar.jsx","components/FilterSection/FilterPanel.jsx","components/App.js","index.js","components/SearchSection/search-section.module.css","components/main-page.module.css","components/ResultSection/result-section.module.css","components/FilterSection/filter-section.module.css"],"names":["headingStyle","color","textAlign","fontFamily","padding","fontSize","paddingBottom","fontWeight","margin","paddingTop","Heading","style","InterestedFacilityContext","createContext","InterestedFacilityProvider","props","useState","interestedFacilities","setInterestedFacilities","Provider","value","children","Heart","fillStyle","favoriteStatus","setFavoriteStatus","useContext","includes","name","styles","filledHeart","unfilledHeart","onClick","facilityIndex","indexOf","splice","push","className","heartWrapper","xmlns","width","height","viewBox","d","FacilityCardInfo","openStatus","changeTime","status","time","FacilityCardBase","cardStyle","open","closed","mode","forceSingleModeWidth","info","hours","FullHours","timeStyle","today","todayFullTime","fullTime","FullHourList","map","hour","shorthandHour","weekDay","shorthandHours","OpenFacilityContext","OpenFacilityProvider","openFacilities","setOpenFacilities","isToday","weekDays","now","Date","getDay","FacilityCard","FullHourTooltip","shorthandHoursArray","tooltipHours","key","id","date","weekday","todaysHours","undefined","sunday","monday","tuesday","wednesday","thursday","friday","saturday","currHour","getHours","currMin","getMinutes","stringMinutes","toString","stringTime","length","openTime","parseInt","closeTime","close","intTime","console","log","i","slice","minute","am","toReturn","isOpen","CardwithTooltip","forwardRef","ref","clickable","favorite","content","theme","interactive","offset","DisplayedFacilityContext","DisplayedFacilityProvider","FacilitiesData","displayedFacilities","setDisplayedFacilities","ResultPanel","DisplayedFacilities","resultsHeader","resultPanel","scrollBar","cardPanel","SearchBar","filteredResults","keyword","setKeyword","searchSection","searchHeading","searchBar","searchIcon","type","placeholder","searchBox","onChange","event","userInput","target","searchResults","filter","search","toLowerCase","matchesName","matchesAlternate","alternateNames","matchesTags","tags","selectedFilters","FilterTag","displayStyle","selectedStatus","setSelectedStatus","selectedFilterTag","filterTag","tagIndex","filterName","selectedFilter","facility","filterBy","FilterPanel","filterSection","filterHeader","filterPanel","App","resultsAndFilterSection","resultSection","ReactDOM","render","document","getElementById","window","onload","location","hash","reload","module","exports"],"mappings":"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","file":"static/js/main.321815a6.chunk.js","sourcesContent":["import React from 'react';\n\nconst headingStyle = {\n\tcolor: 'white',\n\ttextAlign: 'center',\n\tfontFamily: 'Montserrat',\n\tpadding: '1rem',\n\tfontSize: '2.8rem',\n\tpaddingBottom: '0',\n\tfontWeight: '400',\n\tmargin: '1.8rem',\n\tpaddingTop: '80px' // delete later after vertically aligning things right\n};\n\nfunction Heading() {\n\treturn <h1 style={headingStyle}>Bowdoin Facilities Hours</h1>;\n}\n\nexport default Heading;\n","import React, { useState, createContext } from 'react';\n\nexport const InterestedFacilityContext = createContext();\n\nexport const InterestedFacilityProvider = (props) => {\n\tconst [ interestedFacilities, setInterestedFacilities ] = useState([]);\n\treturn (\n\t\t<InterestedFacilityContext.Provider value={[ interestedFacilities, setInterestedFacilities ]}>\n\t\t\t{props.children}\n\t\t</InterestedFacilityContext.Provider>\n\t);\n};\n","import React, { useState, useContext } from 'react';\nimport styles from './result-section.module.css';\nimport { InterestedFacilityContext } from '../../InterestedFacilityContext';\n\nfunction Heart(props) {\n\tconst [ favoriteStatus, setFavoriteStatus ] = useState(false);\n\tconst [ interestedFacilities, setInterestedFacilities ] = useContext(InterestedFacilityContext);\n\n\tvar fillStyle;\n\n\tinterestedFacilities.includes(props.name) ? (fillStyle = styles.filledHeart) : (fillStyle = styles.unfilledHeart);\n\n\tfunction changeFavoriteStatus() {\n\t\tsetFavoriteStatus(!favoriteStatus);\n\n\t\t/* if is not part of the favorited list yet, then add it to the list*/\n\t\tif (!interestedFacilities.includes(props.name)) {\n\t\t\tinterestedFacilities.push(props.name);\n\t\t\tsetInterestedFacilities(interestedFacilities);\n\t\t\t// console.log('added to hearts!');\n\t\t} else {\n\t\t\t/* if it's already favorited, toggling it means taking it off the favorites list*/\n\t\t\t// console.log('trying to remove');\n\n\t\t\tlet facilityIndex = interestedFacilities.indexOf(props.name);\n\t\t\t// console.log(facilityIndex);\n\t\t\tinterestedFacilities.splice(facilityIndex, 1);\n\t\t\t// console.log(interestedFacilities);\n\t\t}\n\t}\n\n\treturn (\n\t\t// <button onClick={changeFavoriteStatus} tabIndex={0} className={styles.heartWrapper}>\n\n\t\t<div onClick={changeFavoriteStatus} className={styles.heartWrapper}>\n\t\t\t<svg className={fillStyle} xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n\t\t\t\t<path d=\"M12 4.419c-2.826-5.695-11.999-4.064-11.999 3.27 0 7.27 9.903 10.938 11.999 15.311 2.096-4.373 12-8.041 12-15.311 0-7.327-9.17-8.972-12-3.27z\" />\n\t\t\t</svg>\n\t\t</div>\n\t);\n}\n\nexport default Heart;\n","import React from 'react';\n\n// import css module for facility card info\nimport styles from './result-section.module.css';\n\nfunction FacilityCardInfo(props) {\n\tlet openStatus = props.openStatus;\n\tlet changeTime = props.changeTime;\n\n\t// console.log('Open status in FacilityCardInfo: ' + openStatus);\n\n\treturn (\n\t\t<div>\n\t\t\t<p className={styles.status}>{openStatus ? 'Open' : 'Closed'}</p>\n\t\t\t<p className={styles.time}>{changeTime}</p>\n\t\t</div>\n\t);\n}\n\nexport default FacilityCardInfo;\n","import React from 'react';\nimport { Textfit } from 'react-textfit';\n\n// import sub components that make up facility card base\nimport Heart from './Heart';\nimport FacilityCardInfo from './FacilityCardInfo';\n\n// import css module for facility card\nimport styles from './result-section.module.css';\n\nfunction FacilityCardBase(props) {\n\t// show different background color on card depending on status (open or closed)\n\tvar cardStyle;\n\tprops.openStatus ? (cardStyle = styles.open) : (cardStyle = styles.closed);\n\n\treturn (\n\t\t<div className={cardStyle}>\n\t\t\t{/* facility name (self shrinking font) */}\n\t\t\t<Textfit mode=\"single\" forceSingleModeWidth={false} className={styles.name}>\n\t\t\t\t{props.name}\n\t\t\t</Textfit>\n\n\t\t\t{/* heart component */}\n\t\t\t<div className={styles.heartWrapper}>\n\t\t\t\t<Heart name={props.name} />\n\t\t\t</div>\n\n\t\t\t{/* time info */}\n\t\t\t<div className={styles.info}>\n\t\t\t\t<FacilityCardInfo hours={props.hours} openStatus={props.openStatus} changeTime={props.changeTime} />\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default FacilityCardBase;\n","import React from 'react';\n\n// import css module for facility card info\nimport styles from './result-section.module.css';\n\nfunction FullHours(props) {\n\tvar timeStyle;\n\t// changes style of weekday+hour block depending on if it's today\n\tprops.today ? (timeStyle = styles.todayFullTime) : (timeStyle = styles.fullTime);\n\n\t// console.log(\"props.hours in full hours\");\n\t// console.log(props);\n\n\tconst FullHourList = props.hours.map((hour) => <p className={styles.shorthandHour}>{hour}</p>);\n\n\treturn (\n\t\t<div className={timeStyle}>\n\t\t\t<p className={styles.weekDay}>{props.weekDay}</p>\n\t\t\t<div className={styles.shorthandHours}>{FullHourList}</div>\n\t\t</div>\n\t);\n}\n\nexport default FullHours;\n","import React, { useState, createContext } from 'react';\n\nexport const OpenFacilityContext = createContext();\n\nexport const OpenFacilityProvider = (props) => {\n\tconst [ openFacilities, setOpenFacilities ] = useState([]);\n\treturn (\n\t\t<OpenFacilityContext.Provider value={[ openFacilities, setOpenFacilities ]}>\n\t\t\t{props.children}\n\t\t</OpenFacilityContext.Provider>\n\t);\n};\n","import React, { forwardRef, useContext } from 'react';\n\n// import tooltip library\nimport Tippy from '@tippyjs/react';\nimport 'tippy.js/dist/tippy.css';\nimport 'tippy.js/themes/light.css';\n\n// import css module for facility card\nimport styles from './result-section.module.css';\n\n// import components that make up facility card\nimport FacilityCardBase from './FacilityCardBase';\nimport FullHours from './FullHours';\n\nimport { OpenFacilityContext } from '../../OpenFacilityContext';\n\nfunction isToday(weekDays) {\n\tvar now = new Date().getDay(); // get today's day\n\tvar isToday = false;\n\n\t// var days = ['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday'];\n\t// the 0 to 6 used in the switch corresponds to indexes in ^ array\n\n\t// checking if any one of weekday === today\n\tswitch (weekDays) {\n\t\tcase 'Sun':\n\t\t\tnow === 0 ? (isToday = true) : (isToday = false);\n\t\t\tbreak;\n\t\tcase 'Mon':\n\t\t\tnow === 1 ? (isToday = true) : (isToday = false);\n\t\t\tbreak;\n\t\tcase 'Tue':\n\t\t\tnow === 2 ? (isToday = true) : (isToday = false);\n\t\t\tbreak;\n\t\tcase 'Wed':\n\t\t\tnow === 3 ? (isToday = true) : (isToday = false);\n\t\t\tbreak;\n\t\tcase 'Thu':\n\t\t\tnow === 4 ? (isToday = true) : (isToday = false);\n\t\t\tbreak;\n\t\tcase 'Fri':\n\t\t\tnow === 5 ? (isToday = true) : (isToday = false);\n\t\t\tbreak;\n\t\tcase 'Sat':\n\t\t\tnow === 6 ? (isToday = true) : (isToday = false);\n\t\t\tbreak;\n\t\tcase 'Mon-Fri':\n\t\t\tnow !== 0 && now !== 6 ? (isToday = true) : (isToday = false);\n\t\t\tbreak;\n\t\tcase 'Sat-Sun':\n\t\t\tnow === 0 || now === 6 ? (isToday = true) : (isToday = false);\n\t\t\tbreak;\n\t\tcase 'Every day':\n\t\t\tisToday = true;\n\t\t\tbreak;\n\t\tcase 'Mon-Sun':\n\t\t\tisToday = true;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t}\n\treturn isToday;\n}\n\nfunction FacilityCard(props) {\n\tconst [ openFacilities, setOpenFacilities ] = useContext(OpenFacilityContext);\n\n\t// create tool tip containing full hour info\n\tconst FullHourTooltip = (props) => {\n\t\tconst shorthandHoursArray = props.shorthandHours;\n\t\treturn (\n\t\t\t<div className={styles.tooltipHours}>\n\t\t\t\t{shorthandHoursArray.map((shorthandHoursArray) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<FullHours\n\t\t\t\t\t\t\tkey={shorthandHoursArray.id}\n\t\t\t\t\t\t\tweekDay={shorthandHoursArray.weekDays}\n\t\t\t\t\t\t\thours={shorthandHoursArray.hours}\n\t\t\t\t\t\t\ttoday={isToday(shorthandHoursArray.weekDays)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</div>\n\t\t);\n\t};\n\n\tlet [ openStatus, changeTime ] = isOpen(props);\n\n\t/* if this facility is open, then add it to the list of open facilities*/\n\tif (openStatus) {\n\t\topenFacilities.push(props.name);\n\t\tsetOpenFacilities(openFacilities);\n\t}\n\n\t// link tooltip with facility card base\n\tconst CardwithTooltip = forwardRef((props, ref) => {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{/* <button className={styles.clickable} ref={ref} tabIndex={0}> */}\n\t\t\t\t<div className={styles.clickable} ref={ref}>\n\t\t\t\t\t<FacilityCardBase\n\t\t\t\t\t\tname={props.name}\n\t\t\t\t\t\thours={props.hours}\n\t\t\t\t\t\tfavorite={props.favorite}\n\t\t\t\t\t\topenStatus={openStatus}\n\t\t\t\t\t\tchangeTime={changeTime}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t});\n\n\treturn (\n\t\t// make a facility card with info and tooltip when user clicks\n\t\t<div>\n\t\t\t<Tippy\n\t\t\t\tcontent={<FullHourTooltip shorthandHours={props.shorthandHours} today={props.today} />}\n\t\t\t\ttheme=\"light\"\n\t\t\t\tinteractive={true}\n\t\t\t\toffset={[ 9, 15 ]}\n\t\t\t>\n\t\t\t\t<CardwithTooltip name={props.name} hours={props.hours} favorite={props.favorite} />\n\t\t\t</Tippy>\n\t\t</div>\n\t);\n}\n\nfunction isOpen(props) {\n\tlet date = new Date();\n\n\tlet weekday = date.getDay();\n\n\tlet todaysHours = undefined;\n\n\tswitch (weekday) {\n\t\tcase 0:\n\t\t\ttodaysHours = props.hours.sunday;\n\t\t\tbreak;\n\t\tcase 1:\n\t\t\ttodaysHours = props.hours.monday;\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\ttodaysHours = props.hours.tuesday;\n\t\t\tbreak;\n\t\tcase 3:\n\t\t\ttodaysHours = props.hours.wednesday;\n\t\t\tbreak;\n\t\tcase 4:\n\t\t\ttodaysHours = props.hours.thursday;\n\t\t\tbreak;\n\t\tcase 5:\n\t\t\ttodaysHours = props.hours.friday;\n\t\t\tbreak;\n\t\tcase 6:\n\t\t\ttodaysHours = props.hours.saturday;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t}\n\n\tlet currHour = date.getHours();\n\tlet currMin = date.getMinutes();\n\tlet stringMinutes = (currMin < 10 ? '0' : '') + currMin.toString();\n\tlet stringTime = currHour.toString() + stringMinutes;\n\n\t// open = true, closed = false\n\tlet status = false;\n\tlet changeTime = undefined;\n\n\t// console.log(\"TODAY'S HOURS\");\n\t// console.log(todaysHours);\n\n\t// array length 1 - only one time set specified\n\t// e.g. open 9-5 (as opposed to 9-12 and 1-5)\n\tif (todaysHours.length === undefined) {\n\t\tlet openTime = todaysHours.open;\n\n\t\tif (openTime === '24hrs') {\n\t\t\treturn [ true, 'all day today' ];\n\t\t} else if (openTime === 'closed') {\n\t\t\treturn [ false, 'all day today' ];\n\t\t}\n\n\t\topenTime = parseInt(todaysHours.open);\n\t\tlet closeTime = parseInt(todaysHours.close);\n\t\tlet intTime = parseInt(stringTime);\n\n\t\tconsole.log('current time ' + intTime);\n\t\tconsole.log('open time ' + openTime);\n\t\tconsole.log('close time ' + closeTime);\n\n\t\t// account for facilities that close past midnight\n\t\tif (closeTime <= 300) {\n\t\t\tcloseTime += 2400;\n\t\t}\n\n\t\tif (intTime <= openTime) {\n\t\t\tstatus = false;\n\t\t\tchangeTime = todaysHours.open;\n\t\t} else if (openTime <= intTime && closeTime >= intTime) {\n\t\t\tstatus = true;\n\t\t\tchangeTime = todaysHours.close;\n\t\t} else {\n\t\t\treturn [ false, 'for the day' ];\n\t\t}\n\t} else {\n\t\t// facilities with multiple sets of hours in one day\n\t\t// e.g. dining halls with breakfast, lunch, dinner\n\n\t\tfor (let i = 0; i < todaysHours.length; i++) {\n\t\t\tlet openTime = parseInt(todaysHours[i].open);\n\t\t\tlet closeTime = parseInt(todaysHours[i].close);\n\t\t\tlet intTime = parseInt(stringTime);\n\n\t\t\tconsole.log('current time ' + intTime);\n\t\t\tconsole.log('open time ' + openTime);\n\t\t\tconsole.log('close time ' + closeTime);\n\n\t\t\t// account for facilities that close past midnight\n\t\t\tif (closeTime <= 300) {\n\t\t\t\tcloseTime += 2400;\n\t\t\t}\n\n\t\t\t// before first block, will open later\n\t\t\tif (i === 0) {\n\t\t\t\tif (intTime < openTime) {\n\t\t\t\t\tstatus = false;\n\t\t\t\t\tchangeTime = todaysHours[i].open;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// open at current time\n\t\t\tif (openTime <= intTime && closeTime >= intTime) {\n\t\t\t\tstatus = true;\n\t\t\t\tchangeTime = todaysHours[i].close;\n\t\t\t\tbreak;\n\n\t\t\t\t// closed now, will open in next time block\n\t\t\t} else if (\n\t\t\t\ti + 1 < todaysHours.length &&\n\t\t\t\tcloseTime <= intTime &&\n\t\t\t\tparseInt(todaysHours[i + 1].open) >= intTime\n\t\t\t) {\n\t\t\t\tstatus = false;\n\t\t\t\tchangeTime = todaysHours[i + 1].open;\n\t\t\t\tbreak;\n\n\t\t\t\t// closed for the day\n\t\t\t} else if (i + 1 >= todaysHours.length && intTime >= closeTime) {\n\t\t\t\tstatus = false;\n\t\t\t\tchangeTime = 'for the day';\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tconsole.log('Change time' + changeTime);\n\n\tif (changeTime === 'until tomorrow') {\n\t\treturn [ status, changeTime ];\n\t}\n\n\tlet hour = changeTime.slice(0, 2);\n\tlet minute = changeTime.slice(2, 4);\n\n\tlet am = true;\n\t// 24 hour to 12 hour time\n\tif (parseInt(hour) >= 13) {\n\t\tam = false;\n\t\thour = (parseInt(hour) - 12).toString();\n\t} else if (parseInt(hour) === 0) {\n\t\thour = '12';\n\t}\n\n\t// 06:30 -> 6:30\n\tif (hour.slice(0, 1) === '0') {\n\t\thour = hour.slice(1, 2);\n\t}\n\n\tchangeTime = hour + ':' + minute;\n\n\tlet toReturn = 'until ' + changeTime + ' ';\n\n\tam ? (toReturn += 'AM') : (toReturn += 'PM');\n\n\treturn [ status, toReturn ];\n}\n\nexport default FacilityCard;\n","import React, { useState, createContext } from 'react';\nimport FacilitiesData from './assets/facilities.json'; // master list of facilities data\n\nexport const DisplayedFacilityContext = createContext();\n\nexport const DisplayedFacilityProvider = (props) => {\n\tconst [ displayedFacilities, setDisplayedFacilities ] = useState(FacilitiesData);\n\treturn (\n\t\t<DisplayedFacilityContext.Provider value={[ displayedFacilities, setDisplayedFacilities ]}>\n\t\t\t{props.children}\n\t\t</DisplayedFacilityContext.Provider>\n\t);\n};\n","import React, { useContext } from 'react';\nimport FacilityCard from './FacilityCard';\nimport styles from './result-section.module.css';\nimport { DisplayedFacilityContext } from '../../DisplayedFacilityContext';\n\nfunction ResultPanel() {\n\tconst [ DisplayedFacilities ] = useContext(DisplayedFacilityContext);\n\n\treturn (\n\t\t<div>\n\t\t\t<h1 className={styles.resultsHeader}>Results</h1>\n\n\t\t\t<div className={styles.resultPanel}>\n\t\t\t\t<div className={styles.scrollBar}>\n\t\t\t\t\t<div className={styles.cardPanel}>\n\t\t\t\t\t\t{DisplayedFacilities.map((DisplayedFacilities) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<FacilityCard\n\t\t\t\t\t\t\t\t\tkey={DisplayedFacilities.id}\n\t\t\t\t\t\t\t\t\tname={DisplayedFacilities.name}\n\t\t\t\t\t\t\t\t\tfavorite={DisplayedFacilities.favorite}\n\t\t\t\t\t\t\t\t\thours={DisplayedFacilities.hours}\n\t\t\t\t\t\t\t\t\tshorthandHours={DisplayedFacilities.shorthandHours}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default ResultPanel;\n","import React, { useState, useContext } from 'react';\nimport styles from './search-section.module.css'; // css styles for search section\nimport { FaSearch } from 'react-icons/fa'; // search icon\nimport FacilitiesData from '../../assets/facilities.json'; // master list of facilities data\nimport { DisplayedFacilityContext } from '../../DisplayedFacilityContext';\n\nfunction SearchBar() {\n\t// import context to update list of facilities to display later\n\tconst [ displayedFacilities, setDisplayedFacilities ] = useContext(DisplayedFacilityContext);\n\n\t// take in user inputted search keyword from the search bar\n\tconst [ keyword, setKeyword ] = useState('');\n\n\t// update list of displayed facilities by filtering master list of facilities on user inputted keyword\n\tfunction updateResults(event) {\n\t\tconst userInput = event.target.value;\n\t\tsetKeyword(userInput);\n\n\t\tlet searchResults = FacilitiesData.filter((displayedFacilities) => {\n\t\t\tlet search = userInput.toLowerCase();\n\n\t\t\tlet matchesName = displayedFacilities.name.toLowerCase().includes(search);\n\n\t\t\tlet matchesAlternate = false;\n\t\t\tfor (let alternateName of displayedFacilities.alternateNames) {\n\t\t\t\tif (alternateName.includes(search)) {\n\t\t\t\t\tmatchesAlternate = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet matchesTags = false;\n\t\t\tfor (let tag of displayedFacilities.tags) {\n\t\t\t\tif (tag.includes(search)) {\n\t\t\t\t\tmatchesTags = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn matchesName || matchesTags || matchesAlternate;\n\t\t});\n\n\t\tsetDisplayedFacilities(searchResults);\n\t}\n\n\treturn (\n\t\t<div className={styles.searchSection}>\n\t\t\t<h1 className={styles.searchHeading}>What are you looking for?</h1>\n\t\t\t<div className={styles.searchBar}>\n\t\t\t\t<FaSearch className={styles.searchIcon} />\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tplaceholder=\"Try &quot;Thorne&quot;, &quot;Pool&quot;, etc.\"\n\t\t\t\t\tclassName={styles.searchBox}\n\t\t\t\t\tvalue={keyword}\n\t\t\t\t\tonChange={updateResults}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default SearchBar;\n","import React, { useState, useContext, forwardRef } from 'react';\nimport styles from './filter-section.module.css';\n\nimport FacilitiesData from '../../assets/facilities.json'; // master list of facilities data\n\nimport { DisplayedFacilityContext } from '../../DisplayedFacilityContext';\nimport { OpenFacilityContext } from '../../OpenFacilityContext';\nimport { InterestedFacilityContext } from '../../InterestedFacilityContext';\n\n// import date picker library\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\n\n// import tooltip library\nimport Tippy from '@tippyjs/react';\nimport 'tippy.js/dist/tippy.css';\nimport 'tippy.js/themes/translucent.css';\n\n// import dropdown icon\nimport { GoTriangleDown } from 'react-icons/go';\n\nlet selectedFilters = [];\nlet filteredResults;\n\nconst FilterTag = (props) => {\n\tconst [ selectedStatus, setSelectedStatus ] = useState(false);\n\n\tvar displayStyle;\n\tselectedStatus ? (displayStyle = styles.selectedFilterTag) : (displayStyle = styles.filterTag);\n\n\tfunction toggleFilter() {\n\t\t/* if currently selected, remove from selected filter list */\n\t\tif (selectedStatus) {\n\t\t\tlet tagIndex = selectedFilters.indexOf(props.filterName);\n\t\t\tselectedFilters.splice(tagIndex, 1);\n\t\t} else {\n\t\t\t/* if not selected yet, add to selected list*/\n\t\t\tselectedFilters.push(props.filterName);\n\t\t}\n\n\t\tsetSelectedStatus(!selectedStatus);\n\t\tfilterBy(selectedFilters);\n\t\tsetDisplayedFacilities(filteredResults);\n\t}\n\n\tconst [ displayedFacilities, setDisplayedFacilities ] = useContext(DisplayedFacilityContext);\n\tconst [ openFacilities ] = useContext(OpenFacilityContext);\n\tconst [ interestedFacilities ] = useContext(InterestedFacilityContext);\n\n\tfunction filterBy(selectedFilters) {\n\t\tfilteredResults = FacilitiesData;\n\n\t\tfor (var selectedFilter of selectedFilters) {\n\t\t\tif (selectedFilter === 'Open Now') {\n\t\t\t\tfilteredResults = filteredResults.filter((facility) => {\n\t\t\t\t\tlet matches = openFacilities.includes(facility.name);\n\t\t\t\t\treturn matches;\n\t\t\t\t});\n\t\t\t} else if (selectedFilter === 'Food') {\n\t\t\t\tfilteredResults = filteredResults.filter((facility) => {\n\t\t\t\t\tlet matches = facility.filter.includes('food');\n\t\t\t\t\treturn matches;\n\t\t\t\t});\n\t\t\t} else if (selectedFilter === 'Athletics') {\n\t\t\t\tfilteredResults = filteredResults.filter((facility) => {\n\t\t\t\t\tlet matches = facility.filter.includes('athletics');\n\t\t\t\t\treturn matches;\n\t\t\t\t});\n\t\t\t} else if (selectedFilter === 'Academic') {\n\t\t\t\tfilteredResults = filteredResults.filter((facility) => {\n\t\t\t\t\tlet matches = facility.filter.includes('academic');\n\t\t\t\t\treturn matches;\n\t\t\t\t});\n\t\t\t} else if (selectedFilter === 'Other') {\n\t\t\t\tfilteredResults = filteredResults.filter((facility) => {\n\t\t\t\t\tlet matches = facility.filter.includes('other');\n\t\t\t\t\treturn matches;\n\t\t\t\t});\n\t\t\t} else if (selectedFilter === 'Interested') {\n\t\t\t\tfilteredResults = filteredResults.filter((facility) => {\n\t\t\t\t\tlet matches = interestedFacilities.includes(facility.name);\n\t\t\t\t\treturn matches;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\treturn (\n\t\t<div onClick={toggleFilter}>\n\t\t\t<div>\n\t\t\t\t{/* <button className={styles.filterName} className={displayStyle} tabIndex={0}> */}\n\t\t\t\t<div className={styles.filterName} className={displayStyle}>\n\t\t\t\t\t{props.filterName}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\n// time picker using react-datepicker package\nconst OpenAtTimePicker = () => {\n\tconst [ time, setTime ] = useState(new Date());\n\t// const CustomTimeInput = ({ value, onChange }) => (\n\t// \t<input\n\t// \t\tvalue={value}\n\t// \t\tonChange={(e) => onChange(e.target.value)}\n\t// \t\tstyle={{ border: 'solid 1px', borderRadius: '25px' }}\n\t// \t/>\n\t// );\n\n\treturn (\n\t\t<div className={styles.calendarPopup}>\n\t\t\t<DatePicker\n\t\t\t\tselected={time}\n\t\t\t\tonChange={(date) => setTime(date)}\n\t\t\t\ttimeInputLabel=\"Time :\"\n\t\t\t\t// dateFormat=\"MM/dd hh:mm aa\"\n\t\t\t\tshowTimeInput\n\t\t\t\tinline\n\t\t\t\t// showPopperArrow={false}\n\t\t\t\tclassName={styles.timePicker}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nconst OpenAtFilterTag = () => {\n\tconst [ selectedStatus, setSelectedStatus ] = useState(false);\n\n\tvar displayStyle;\n\tselectedStatus ? (displayStyle = styles.selectedFilterTag) : (displayStyle = styles.filterTag);\n\n\tfunction toggleFilter() {\n\t\t// if currently selected, remove from selected filter list\n\t\tif (selectedStatus) {\n\t\t\tlet tagIndex = selectedFilters.indexOf('Open At');\n\t\t\tselectedFilters.splice(tagIndex, 1);\n\t\t} else {\n\t\t\t// if not selected yet, add to selected list\n\t\t\tselectedFilters.push('Open At');\n\t\t}\n\n\t\tsetSelectedStatus(!selectedStatus);\n\n\t\tconsole.log('!!!in toggleOpenAtFilter');\n\t\tconsole.log('selectedStatus: ' + selectedStatus);\n\t}\n\n\tfunction changeDropDownClicked(e) {\n\t\te.stopPropagation();\n\t\tconsole.log('???in changeDropDownClicked');\n\t}\n\n\treturn (\n\t\t<div onClick={toggleFilter}>\n\t\t\t{/* <button className={styles.filterName} className={displayStyle} tabIndex={0}> */}\n\t\t\t<div className={styles.filterName} className={displayStyle}>\n\t\t\t\tOpen At\n\t\t\t\t{/* drop down with time picker tooltip */}\n\t\t\t\t{/* <div className={styles.dropDownWithToolTip} tabIndex={0} onClick={changeDropDownClicked}> */}\n\t\t\t\t<div className={styles.dropDownWithToolTip} onClick={changeDropDownClicked}>\n\t\t\t\t\t<Tippy\n\t\t\t\t\t\tcontent={<OpenAtTimePicker />}\n\t\t\t\t\t\ttheme=\"translucent\"\n\t\t\t\t\t\ttrigger=\"click\"\n\t\t\t\t\t\tinteractive={true}\n\t\t\t\t\t\t// offset={[ 73, -12 ]}\n\t\t\t\t\t\tplacement=\"bottom\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<DropDownIcon selected={selectedStatus} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Tippy>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nconst DropDownIcon = (props) => {\n\tvar displayStyle;\n\tprops.selected ? (displayStyle = styles.selectedDropDownSVG) : (displayStyle = styles.dropDownSVG);\n\treturn <GoTriangleDown className={displayStyle} />;\n};\n\nfunction FilterPanel() {\n\treturn (\n\t\t<div>\n\t\t\t<div className={styles.filterSection}>\n\t\t\t\t<h1 className={styles.filterHeader}>Filter By</h1>\n\t\t\t\t<div className={styles.filterPanel}>\n\t\t\t\t\t<FilterTag filterName=\"Interested\" />\n\t\t\t\t\t<FilterTag filterName=\"Open Now\" />\n\t\t\t\t\t{/* <OpenAtFilterTag /> */}\n\t\t\t\t\t<FilterTag filterName=\"Food\" />\n\t\t\t\t\t<FilterTag filterName=\"Athletics\" />\n\t\t\t\t\t<FilterTag filterName=\"Academic\" />\n\t\t\t\t\t<FilterTag filterName=\"Other\" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default FilterPanel;\n","import React, { useState, useEffect } from 'react';\nimport Heading from './Heading';\nimport ResultPanel from './ResultSection/ResultPanel';\nimport SearchBar from './SearchSection/SearchBar';\nimport FilterPanel from './FilterSection/FilterPanel';\n\nimport styles from './main-page.module.css';\n\nimport { DisplayedFacilityProvider } from '../DisplayedFacilityContext';\nimport { OpenFacilityProvider } from '../OpenFacilityContext';\nimport { InterestedFacilityProvider } from '../InterestedFacilityContext';\n\nfunction App() {\n\treturn (\n\t\t<DisplayedFacilityProvider>\n\t\t\t<OpenFacilityProvider>\n\t\t\t\t<InterestedFacilityProvider>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Heading />\n\t\t\t\t\t\t<SearchBar />\n\n\t\t\t\t\t\t<div className={styles.resultsAndFilterSection}>\n\t\t\t\t\t\t\t<div className={styles.resultSection}>\n\t\t\t\t\t\t\t\t<ResultPanel />\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div className={styles.filterSection}>\n\t\t\t\t\t\t\t\t<FilterPanel />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</InterestedFacilityProvider>\n\t\t\t</OpenFacilityProvider>\n\t\t</DisplayedFacilityProvider>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n/* reload page once after page loads */\nwindow.onload = function() {\n\t//considering there aren't any hashes in the urls already\n\tif (!window.location.hash) {\n\t\t//setting window location\n\t\twindow.location = window.location + '#loaded';\n\t\t//using reload() method to reload web page\n\t\twindow.location.reload();\n\t}\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchSection\":\"search-section_searchSection__2DDov\",\"searchHeading\":\"search-section_searchHeading__2JoIO\",\"searchBar\":\"search-section_searchBar__7vE39\",\"searchBox\":\"search-section_searchBox__35pOo\",\"searchIcon\":\"search-section_searchIcon__1feNA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"resultsAndFilterSection\":\"main-page_resultsAndFilterSection__1fCCy\",\"resultSection\":\"main-page_resultSection__3hRww\",\"filterSection\":\"main-page_filterSection__2nWhb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"resultsHeader\":\"result-section_resultsHeader__1EZTs\",\"resultPanel\":\"result-section_resultPanel__Cumne\",\"cardPanel\":\"result-section_cardPanel__3v5Vj\",\"clickable\":\"result-section_clickable__2CKe7\",\"scrollBar\":\"result-section_scrollBar__37dxc\",\"card\":\"result-section_card__2SNe0\",\"open\":\"result-section_open__qpS7O result-section_card__2SNe0\",\"closed\":\"result-section_closed__1WA4P result-section_card__2SNe0\",\"unavailable\":\"result-section_unavailable__14xr4 result-section_card__2SNe0\",\"name\":\"result-section_name__gK3kQ\",\"heartWrapper\":\"result-section_heartWrapper__aIXgt\",\"heart\":\"result-section_heart__2pSak\",\"unfilledHeart\":\"result-section_unfilledHeart__252n4 result-section_heart__2pSak\",\"filledHeart\":\"result-section_filledHeart__33I95 result-section_heart__2pSak\",\"fullTimeButton\":\"result-section_fullTimeButton__AzYqx\",\"info\":\"result-section_info__vCIfW\",\"status\":\"result-section_status__sIm2I\",\"time\":\"result-section_time__1agkI\",\"tooltipHours\":\"result-section_tooltipHours__3ywfV\",\"fullTime\":\"result-section_fullTime__2N7kZ\",\"todayFullTime\":\"result-section_todayFullTime__lafwg result-section_fullTime__2N7kZ\",\"weekDay\":\"result-section_weekDay__3JtGl\",\"shorthandHour\":\"result-section_shorthandHour__fWtzh\",\"shorthandHours\":\"result-section_shorthandHours__2f9O2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterHeader\":\"filter-section_filterHeader__rqRV4\",\"filterPanel\":\"filter-section_filterPanel__3rhSh\",\"filterTag\":\"filter-section_filterTag__1NkfX\",\"selectedFilterTag\":\"filter-section_selectedFilterTag__1FLi3 filter-section_filterTag__1NkfX\",\"filterName\":\"filter-section_filterName__3i5W_\",\"timePicker\":\"filter-section_timePicker__3EmH_\",\"dropDownSVG\":\"filter-section_dropDownSVG__2ZFkm\",\"selectedDropDownSVG\":\"filter-section_selectedDropDownSVG__qLCE2 filter-section_dropDownSVG__2ZFkm\",\"dropDownWithToolTip\":\"filter-section_dropDownWithToolTip__3iiCP\",\"calendarPopup\":\"filter-section_calendarPopup__36I7N\"};"],"sourceRoot":""}